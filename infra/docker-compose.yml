version: '3.3'

volumes:
  postgres_data_volume:
  static_volume:
  media_volume:

services:

  backend:
    container_name: foodgram_backend-back
    build: ../backend
    ports:
      - "8000:8000"
    depends_on:
      - postgres
    volumes:
      - static_volume:/static/
      - media_volume:/media/
    command: bash -c "python manage.py collectstatic --noinput && \
      python manage.py makemigrations && \
      python manage.py migrate && \
      python manage.py import_ingredients && \
      gunicorn foodgram_backend.wsgi:application --bind 0:8000"

  frontend:
    container_name: foodgram_backend-front
    build: ../frontend
    volumes:
      - ../frontend/:/app/result_build/

  nginx:
    container_name: foodgram_backend-proxy
    image: nginx:1.25.4-alpine
    ports:
      - "80:80"
    depends_on:
      - backend
      - frontend
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ../frontend/build:/usr/share/nginx/html/
      - ../docs/:/usr/share/nginx/html/api/docs/
      - static_volume:/etc/nginx/html/static/
      - media_volume:/etc/nginx/html/media/

  postgres:
    container_name: foodgram_backend-db
    image: postgres:17
    environment:
      - POSTGRES_USER=foodgram_user
      - POSTGRES_PASSWORD=6ghHIUNJBY87JBIO8jY
      - POSTGRES_DB=foodgram_backend
    ports:
      - 5432:5432
    volumes:
      - postgres_data_volume:/var/lib/postgresql/data